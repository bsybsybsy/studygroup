{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\WebstormProjects\\\\project3\\\\studygroup-frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // Check if user is logged in on app start\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    if (token && userData) {\n      try {\n        setUser(JSON.parse(userData));\n      } catch (error) {\n        console.error('Error parsing user data:', error);\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      }\n    }\n  }, []);\n  const login = userData => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n  const value = {\n    user,\n    login,\n    logout,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","localStorage","getItem","userData","JSON","parse","error","console","removeItem","login","setItem","stringify","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/WebstormProjects/project3/studygroup-frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\n\r\ninterface User {\r\n  id: number;\r\n  username: string;\r\n  email: string;\r\n  role?: string;\r\n  provider?: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  loading: boolean;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  loginWithGoogle: (credential: string) => Promise<void>;\r\n  register: (email: string, username: string, password: string) => Promise<void>;\r\n  registerWithGoogle: (credential: string) => Promise<void>;\r\n  logout: () => void;\r\n  fetchCurrentUser: () => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in on app start\r\n    const token = localStorage.getItem('token');\r\n    const userData = localStorage.getItem('user');\r\n    \r\n    if (token && userData) {\r\n      try {\r\n        setUser(JSON.parse(userData));\r\n      } catch (error) {\r\n        console.error('Error parsing user data:', error);\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const login = (userData: User) => {\r\n    setUser(userData);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    login,\r\n    logout,\r\n    isAuthenticated: !!user,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAqBzF,MAAMC,WAAW,gBAAGN,aAAa,CAA8BO,SAAS,CAAC;AAEzE,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGT,UAAU,CAACK,WAAW,CAAC;EACvC,IAAII,OAAO,KAAKH,SAAS,EAAE;IACzB,MAAM,IAAII,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAYpB,OAAO,MAAMI,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACzE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAc,IAAI,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAE7C,IAAIF,KAAK,IAAIG,QAAQ,EAAE;MACrB,IAAI;QACFJ,OAAO,CAACK,IAAI,CAACC,KAAK,CAACF,QAAQ,CAAC,CAAC;MAC/B,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDL,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;QAChCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;MACjC;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,KAAK,GAAIN,QAAc,IAAK;IAChCJ,OAAO,CAACI,QAAQ,CAAC;IACjBF,YAAY,CAACS,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACO,SAAS,CAACR,QAAQ,CAAC,CAAC;EACxD,CAAC;EAED,MAAMS,MAAM,GAAGA,CAAA,KAAM;IACnBb,OAAO,CAAC,IAAI,CAAC;IACbE,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED,MAAMK,KAAsB,GAAG;IAC7Bf,IAAI;IACJW,KAAK;IACLG,MAAM;IACNE,eAAe,EAAE,CAAC,CAAChB;EACrB,CAAC;EAED,oBACEV,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAjB,QAAA,EAChCA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACtB,GAAA,CA1CWF,YAAyC;AAAAyB,EAAA,GAAzCzB,YAAyC;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}